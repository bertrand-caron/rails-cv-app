upstream cv {
  server unix:/home/cv/rails-cv-app/tmp/sockets/cv.socket;
}

server {
  listen 80;
  server_name   YOUR_SERVER_FQDN;
  rewrite       ^ https://$server_name$request_uri? permanent;
}

server {
  listen *:443 ssl;
  server_name YOUR_SERVER_FQDN;
  server_tokens off;
  root /home/cv/rails-cv-app/public;

  # SSL
  # ============================================================================
  ssl                   on;
  ssl_certificate /etc/nginx/certs/rails-cv-app_server.pem;
  ssl_certificate_key /etc/nginx/certs/rails-cv-app_privatekey.pem;
  ssl_protocols         SSLv3 TLSv1;

  #Disables all weak ciphers
  ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;

  access_log  /var/log/nginx/cv_access.log;
  error_log   /var/log/nginx/cv_error.log;

  client_max_body_size 500M; # allows file uploads up to 500 megabytes

  # Add Image Caching
  location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
    expires max;
  }

  location / {

    # serve static files from defined root folder;.
    # @cv is a named location for the upstream fallback, see below
    gzip_static on;
    try_files $uri $uri/index.html $uri.html @cv;
  }

  location @cv {
    proxy_read_timeout 300; # https://github.com/gitlabhq/gitlabhq/issues/694
    proxy_connect_timeout 300; # https://github.com/gitlabhq/gitlabhq/issues/694
    proxy_redirect     off;

    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   Host              $http_host;
    proxy_set_header   X-Real-IP         $remote_addr;

    proxy_pass http://cv;
  }

}
