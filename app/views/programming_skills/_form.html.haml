= form_for(@programming_skill) do |f|
  - if @programming_skill.errors.any?
    .panel.panel-danger
      .panel-heading
        = pluralize(@programming_skill.errors.count, "error")
        prohibited this programming skill from being saved:
      %ul
        - @programming_skill.errors.full_messages.each do |message|
          %li= message
  .field
    %div= f.label :title
    = f.text_field :title, class: "form-control", placeholder: 'Ex: Ruby on Rails'
  .field{:style => "width:150px"}
    %div= f.label :skill_type
    = f.select :skill_type, [ ['Languages',0], ['Workflow Tools', 1]], {}, { :class => "form-control"}
  .field
    %div= f.label :description
    = f.text_area :description, class: "form-control", rows: "1", placeholder: 'Ex: Designing Web Applications: Twitter, Instagram, Facebook'
    %p.help-block
      %b Tip
      For better rendering, the skill description should be a one-liner. Use the 'Details' field below to provide further information.
  .field
    %div= f.label :details
    = f.text_area :details, class: "form-control", rows: "10"
    %p.help-block
      %b Syntax
      This section acceps
      = succeed "," do
        %a{:href => ""} Markdown
      a simple yet powerful for structuring information.
      If you don't know Markdown already, you should really have a look at it.
      Otherwise, just use plain HTML, or worse, unformatted text.
  = render :partial => 'pages/hyperlink_form_field', :locals => {:f => f, :item => @programming_skill}
  .field
    %div= f.label :icon
    = f.text_field :icon, class: "form-control", placeholder: '(Optionnal) Ex: \'raspberrypi\''
    %p.help-block
      %b Optionnal
      If set, will display an icon as given in the
      %a{:href => "http://mfizz.com/oss/font-mfizz", target: '_blank'} Font-mfizz
      or
      %a{:href => "http://fortawesome.github.io/Font-Awesome/icons/", target: '_blank'} Font-Awesome
      icon libraries.
      Search it for an icon you like and set the field to its value (either 'fa-example' for font awesome, or 'icon-example' for font-mfizz).
  = render :partial => 'pages/rank_form_field', :locals => {:f => f}
  .field.field-ranking{:style => ""}
    %div= f.label :ranking
    = f.number_field :ranking, class: "form-control", min: '0', max: '5', value: "#{@programming_skill.ranking}"
    %p.help-block Rank your skill on a scale from 0 to 5. Try to use the bigger span possible in your skills to avoid looking delusional.
    %p
  .actions
    = f.submit nil, class: "btn btn-primary"
